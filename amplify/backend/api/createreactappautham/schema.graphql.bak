input AMPLIFY { globalAuthRule: AuthRule = { allow: public } }

type Todo @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  description: String
}

type Post @model(mutations: {create: "createPost", delete: "deletePost", update: null}, timestamps: null, subscriptions: {level: public}) @auth(rules: [{allow: owner, ownerField: "owner", provider: userPools}, {allow: private, provider: userPools, operations: [read]}]) {
  type: String! @index(name: "SortByTimestamp", queryField: "listPostsSortedByTimestamp", sortKeyFields: ["timestamp"])
  id: ID
  content: String!
  owner: String @index(name: "BySpecificOwner", queryField: "listPostsBySpecificOwner", sortKeyFields: ["timestamp"])
  timestamp: Int!
}

type Choice @model @auth(rules: [{allow: public}]) {
  content: String
}

type Question @model @auth(rules: [{allow: public}]) {
  content: String
  choices: [Choice] @hasMany
}

type Presentation @model @auth(rules: [{allow: public}]) {
  id: ID
  title: String
  description: String
  owner: String
  timestamp: Int!
  questions: [Question] @hasMany
}

